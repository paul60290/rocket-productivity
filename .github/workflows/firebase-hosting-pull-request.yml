# This workflow deploys a staging preview to the STAGING Firebase project on every PR.
name: Deploy to Firebase Hosting on PR (Staging)
'on': pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .env.staging file
        run: |
          cat > .env.staging << EOF
          VITE_API_KEY=${{ secrets.STAGING_VITE_API_KEY }}
          VITE_AUTH_DOMAIN=${{ secrets.STAGING_VITE_AUTH_DOMAIN }}
          VITE_PROJECT_ID=${{ secrets.STAGING_VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET=${{ secrets.STAGING_VITE_STORAGE_BUCKET }}
          VITE_MESSAGING_SENDER_ID=${{ secrets.STAGING_VITE_MESSAGING_SENDER_ID }}
          VITE_APP_ID=${{ secrets.STAGING_VITE_APP_ID }}
          EOF
      
      - name: Verify .env.staging file
        run: |
          echo "Verifying that .env.staging file was created..."
          test -s .env.staging || (echo "ERROR: .env.staging file is empty or was not created." && exit 1)
          echo "File created successfully."

      - name: DEBUG - Show .env.staging content
        run: |
          echo "--- Start of .env.staging content ---"
          cat .env.staging
          echo "--- End of .env.staging content ---"

      - name: DEBUG - List files in directory
        run: ls -la
          
      - name: Build Staging App
        run: npm ci && npm run build -- --mode staging

      - name: DEBUG - Check for API key in built files
        run: |
          echo "Searching for API key in built JavaScript files..."
          if grep -r "AIza" dist/assets; then
            echo "SUCCESS: API key was found in the build output."
          else
            echo "ERROR: API key was NOT found in the build output."
            exit 1
          fi

      - name: Deploy to Staging Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}'
          projectId: rocket-productivity-staging
          channelId: pr-${{ github.event.number }}

